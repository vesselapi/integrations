name: Publish Prerelease
on:
  pull_request:
    branches: [main]
    types: [labeled, unlabeled, opened, synchronize]
jobs:
  verify-prerelease-version:
    if: contains(github.event.pull_request.labels.*.name, 'prerelease')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get Pull Request Version
        id: pr-version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
        with:
          ref: main
      - name: Get Base Version
        id: base-version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: yarn add semver
      - uses: actions/github-script@v6
        env:
          PR_VERSION: ${{steps.pr-version.outputs.version}}
          BASE_VERSION: ${{steps.base-version.outputs.version}}
        with:
          script: |
            const semver = require("semver")
            const { PR_VERSION: pr, BASE_VERSION: base } = process.env
            const pr_clean = pr.replace(/\-.+$/, '')
            const pr_is_greater = semver.gt(pr_clean, base)

            if (pr_is_greater) {
              core.debug(`The pr version (${pr} -> ${pr_clean}) is higher than the base version (${base}).`)
            } else {
              core.setFailed(`The pr version (${pr}) is not greater than the base version (${base}). A pull request labeled with 'prerelease' must have a valid version bump.`)
            }
            const pr_is_prerelease = semver.prerelease(pr) !== null
            if (pr_is_prerelease) {
              core.debug(`The pr version (${pr}) is a prerelease.`)
            } else {
              core.setFailed(`The pr version (${pr}) is not a prerelease. A pull request labeled with 'prerelease' must have a valid prerelease version (1.2.3-rc.1).`)
            }
  publish-prerelease:
    runs-on: ubuntu-latest
    needs: verify-prerelease-version
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
      - run: yarn
      - run: yarn build
      - run: npm publish --next --access public
        env:
          NODE_AUTH_TOKEN: '${{ secrets.NPM_TOKEN }}'
